{"version":3,"sources":["components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/Organise/Organise.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","_ref","setForm","isSigned","react_default","a","createElement","className","style","display","justifyContent","onClick","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onNameChange","event","setState","signInName","target","value","onPasswordChange","signInPassword","onSignIn","validUser","User","forEach","user","username","state","password","id","htmlFor","type","name","onChange","React","Component","Organise","selected","_this2","index_browser_default","options","List","canFilter","filterPlaceholder","icons","moveLeft","esm","Provider","color","size","index_esm","moveRight","moveAllLeft","moveAllRight","initialState","form","data","column","Header","accessor","sortable","filterable","App","formName","fetch","method","then","response","json","components_Navigation_Navigation","components_SignIn_SignIn","es","columns","defaultPageSize","components_Organise_Organise","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a120ec1.chunk.js","sourcesContent":["import React from 'react';\r\nconst Navigation = ({setForm,isSigned}) =>{\r\n\tif (isSigned) {\r\n\t\treturn(\r\n\t<nav className= 'bg-blue' style={{display:'flex',\r\n\t\tjustifyContent:'flex-end'}}> \r\n\t<h3 onClick={()=>setForm('sign in')} className='ph3 pointer dim link white ttu bodoni'>Sign Out</h3>\r\n\t<h3 onClick={()=>setForm('home')} className='ph3 pointer dim link white ttu bodoni'>Details</h3>\r\n\t<h3 onClick={()=>setForm('organise')} className='ph3 pointer dim link white ttu bodoni'>Organise</h3>\r\n\t</nav>\t);\r\n\t}\r\n\telse {\r\n\t\treturn(\r\n\t<nav className= 'bg-blue' style={{display:'flex',justifyContent:'flex-end'}}> \r\n\t<h3 onClick={()=>setForm('sign in')} className='ph3 pointer dim link white ttu bodoni'>Sign In</h3>\r\n\t</nav>);\r\n\t}\r\n\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport User from './user.json';\r\n\r\nclass SignIn extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      signInName:'',\r\n      signInPassword:''\r\n    }\r\n  }\r\n  onNameChange=(event)=>{\r\n    this.setState({signInName:event.target.value});\r\n  }\r\n  onPasswordChange=(event)=>{\r\n    this.setState({signInPassword:event.target.value});\r\n  }\r\n  onSignIn = () =>{\r\n    let validUser=false;\r\n    User.forEach((user) => {\r\n      \r\n      if(user.username===this.state.signInName && user.password===this.state.signInPassword){\r\n        validUser= true;\r\n      }\r\n      });\r\n    if(validUser){\r\n      \r\n      this.props.setForm('home');\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    \r\n    return(\r\n    <article className=\"mw6 center br3 pa2-ns mv6 ba b--white-20 shadow-3\">\r\n  <main className=\"pa4 black-80\">\r\n  <div className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f5 fw6 tc ph0 mh0 center ttu\">Sign In</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6 \" htmlFor=\"email-address\">User Name</label>\r\n        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 \" \r\n        type=\"email\" \r\n        name=\"email-address\"  \r\n        id=\"email-address\"\r\n        onChange={this.onNameChange}/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 \" \r\n        type=\"password\" \r\n        name=\"password\"  \r\n        id=\"password\"\r\n        onChange={this.onPasswordChange}/>\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"center\">\r\n      <input \r\n      className=\"b ph3 pv2 input-reset ba  bg-transparent grow pointer f6 dib\" \r\n      type=\"submit\" \r\n      value=\"Sign in\"\r\n      onClick={this.onSignIn}/>\r\n    </div>\r\n    \r\n  </div>\r\n</main>\r\n</article>\r\n\r\n);\r\n  }\r\n}\r\nexport default SignIn;","import React from 'react';\r\nimport DualListbox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport List from './list.json';\r\nimport { IoIosArrowDropleftCircle,IoIosFastforward,IoIosArrowDroprightCircle,IoIosRewind }from 'react-icons/io';\r\nimport { IconContext } from \"react-icons\";\r\n\r\n \r\n\r\n\r\n\r\nclass Organise extends React.Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      selected:[]\r\n    }\r\n  }\r\n\r\n  render(){\r\n  \treturn(\r\n  \t\t<div className=\"mv4\">\r\n     \r\n  \t\t<DualListbox\r\n  \t\toptions={List}\r\n  \t\tselected={this.state.selected}\r\n  \t\tonChange={(selected)=>{\r\n  \t\t\tthis.setState({selected});\r\n\r\n  \t\t}}\r\n\r\n  \t\tcanFilter\r\n  \t\tfilterPlaceholder='Search Permissions'\r\n\r\n  \t\ticons={{\r\n        moveLeft: <IconContext.Provider value={{ color: \"blue\", size:\"3em\", className: \"global-class-name\" }}>\r\n        <IoIosArrowDropleftCircle /> \r\n     </IconContext.Provider>,\r\n \t\tmoveRight: <IconContext.Provider value={{ color: \"blue\", size:\"3em\", className: \"global-class-name\" }}>\r\n \t\t<IoIosArrowDroprightCircle />\r\n \t\t</IconContext.Provider>,\r\n \t\tmoveAllLeft:<IoIosRewind/>,\r\n \t\tmoveAllRight:<IoIosFastforward/>}}\r\n\r\n  \t\t/>\r\n\r\n  \t\t</div>\r\n  \t\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Organise;","import React, { Component } from 'react'; \nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Organise from './components/Organise/Organise';\nimport './App.css';\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\n\nconst initialState={\n  isSigned:false,\n  form:'sign in',\n  data:[]\n};\nconst column=[\n  {\n    Header:\"FULL NAME\",\n    accessor:\"name\"\n  },\n  {\n    Header:\"PHONE\",\n    accessor:\"phone\",\n    sortable:false,\n    filterable:false\n  },\n  {\n    Header:\"USER NAME\",\n    accessor:\"username\"\n  },\n  {\n    Header:\"COMPANY NAME\",\n    accessor:\"company.name\",\n    sortable:false\n  }\n];\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n  setForm = (formName)=>{\n    if(formName==='home'){\n      this.setState({isSigned:true});\n    }\n    else if (formName==='sign in'){\n      this.setState(initialState);\n    }\n    this.setState({form:formName});\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\",{\n      method:\"GET\"})\n    .then(response=>response.json())\n    .then(data=>{\n      this.setState({data:data});\n    })\n  }\n\n   render() {\n\n    return (\n      <div>\n      <Navigation isSigned={this.state.isSigned}\n       setForm={this.setForm}/>\n       {(this.state.form === 'sign in')\n       ?\n      <SignIn setForm={this.setForm} />\n      :(this.state.form==='home')\n        ?<ReactTable className=\"mv4\" columns={column} \n        data={this.state.data}\n        filterable\n        filterPlaceholder='Search'\n        defaultPageSize={5} />\n          :\n        <Organise />\n      \n    }\n       </div>\n       )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}